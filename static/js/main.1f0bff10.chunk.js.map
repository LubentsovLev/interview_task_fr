{"version":3,"sources":["logo.svg","Tablet/Tablet.jsx","assets/prelader/45.svg","helpers/loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tablet","props","up","sort","className","onClick","sortItems","sortField","data","map","i","checkItem","id","firstName","email","phone","Loader","src","loader","alt","Todo","itemItem","address","streetAddress","city","state","description","App","useState","loading","setLoading","setData","setSort","setField","setTtemItem","useEffect","axios","then","data_","_","orderBy","Heigth","React","createRef","ref","field","arr","concat","sortType","orderedData","row","console","log","current","scrollTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f0bff10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction Tablet(props) {\r\n\r\n  let up = props.sort === 'asc' ? '↓' : '↑'\r\n  return (\r\n    <table className=\"table Tablet\">\r\n      <thead>\r\n        <tr>\r\n          <th onClick={() => {props.sortItems(\"id\");}}> id {props.sortField == 'id' ? up : ''} </th>\r\n          <th onClick={() => {props.sortItems(\"firstName\");}}>firstName {props.sortField == 'firstName' ? up : ''}</th>\r\n          <th onClick={() => {props.sortItems(\"email\");}}>email {props.sortField == 'email' ? up : ''}</th>\r\n          <th onClick={() => {props.sortItems(\"phone\");}}>phone {props.sortField == 'phone' ? up : ''}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.data.map((i) => (\r\n          <tr key={i.id + i.firstName} onClick={() => {props.checkItem(i)}}>\r\n            <td>{i.id}</td>\r\n            <td>{i.firstName}</td>\r\n            <td>{i.email}</td>\r\n            <td>{i.phone}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nexport default Tablet;\r\n","export default __webpack_public_path__ + \"static/media/45.6cf37826.svg\";","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport loader from \"../assets/prelader/45.svg\";\r\nfunction Loader(props) {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img src={loader} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Loader;\r\n","import logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Component, useEffect, useState } from \"react\";\nimport * as axios from \"axios\";\nimport Tablet from \"./Tablet/Tablet\";\nimport Loader from \"./helpers/loader\";\nimport _ from \"lodash\";\n\nconst App = () => {\n  // state = {\n  //   loading: true,\n  //   data: [],\n  // };\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [sort, setSort] = useState(\"asc\");\n  const [sortField, setField] = useState(\"id\");\n  const [itemItem, setTtemItem] = useState(0);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\"\n      )\n      .then((data) => {\n        const data_ = data.data;\n        setData(_.orderBy(data_, \"id\", \"asc\"));\n        setLoading(false);\n      });\n  }, []);\n  let sortItems = (field = \"id\") => {\n    let arr = data.concat();\n    let sortType = sort === \"asc\" ? \"desc\" : \"asc\";\n    let orderedData = _.orderBy(arr, field, sortType);\n    setData(orderedData);\n    setSort(sortType);\n    setField(field);\n  };\n  let Heigth = React.createRef();\n  let checkItem = (row) => {\n    // Heigth.current.scrollTop = 0\n    console.log(Heigth.current.scrollTop);\n    setTtemItem(row);\n  };\n\n  return (\n    <div className=\"App\" ref={Heigth}>\n      <header className=\"App-header\">\n        {/* <Wrapper />\n          <Switch>\n            <Route path=\"/Tablet\" render={() => <Tablet />} />;\n            <Route path=\"/Todo\" render={() => <Todo />} />;\n          </Switch> */}\n        {loading ? (\n          <Loader />\n        ) : (\n          <div>\n            {itemItem ? <Todo itemItem={itemItem} /> : <span />}\n            <Tablet\n              data={data}\n              sortItems={sortItems}\n              sort={sort}\n              sortField={sortField}\n              checkItem={checkItem}\n            />\n          </div>\n        )}\n      </header>\n    </div>\n  );\n};\nfunction Wrapper() {\n  return (\n    <div className=\"Wrapper\">\n      <div className=\"ln\">\n        <NavLink className={\"ln\"} to=\"/Tablet\" activeClassName={\"ln_active\"}>\n          Tablet\n        </NavLink>\n      </div>\n      <div className=\"ln\">\n        <NavLink className={\"ln\"} to=\"/Todo\" activeClassName={\"ln_active\"}>\n          Todo\n        </NavLink>\n      </div>\n    </div>\n  );\n}\n\nfunction Todo(props) {\n  return (\n    <div className=\"itemItem\">\n      <div>\n        <b>firstName :</b> {props.itemItem.firstName}\n      </div>\n      <div>\n        <b>email:</b> {props.itemItem.email}\n      </div>\n      <div>\n        <b>phone:</b> {props.itemItem.phone}\n      </div>\n      <div className=\"item_left\">\n        <div>\n          <b> Location : </b>\n        </div>\n        <div>\n          {\" \"}\n          <b>streetAddress:</b> {props.itemItem.address.streetAddress}\n        </div>\n        <div>\n          <b>city:</b> {props.itemItem.address.city}\n        </div>\n        <div>\n          <b>state:</b> {props.itemItem.address.state}\n        </div>\n      </div>\n      <div>\n        <p>about: {props.itemItem.description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Route,\n  withRouter,\n  BrowserRouter,\n  HashRouter,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}